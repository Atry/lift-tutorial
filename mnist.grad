Target :: (in 10)
Loss :: (out)
Loss := ((reduce 1 +) (0 - ((log Output) * Target)))

gK1 :: (in 8 5 5)
gB1 :: (in 8)
gK2 :: (in 16 8 5 5)
gB2 :: (in 16)
gW :: (in 10 16 1 4 4)
gB :: (in 10)
ngK1 :: (out 8 5 5)
ngB1 :: (out 8)
ngK2 :: (out 16 8 5 5)
ngB2 :: (out 16)
ngW :: (out 10 16 1 4 4)
ngB :: (out 10)

dK1 :: (grad Loss K1)
dB1 :: (grad Loss B1)
dK2 :: (grad Loss K2)
dB2 :: (grad Loss B2)
dW :: (grad Loss W)
dB :: (grad Loss B)

ngK1 := (gK1 + dK1)
ngB1 := (gB1 + dB1)
ngK2 := (gK2 + dK2)
ngB2 := (gB2 + dB2)
ngW := (gW + dW)
ngB := (gB + dB)
